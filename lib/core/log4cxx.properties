# Set root logger level to INFO and its only appender to A1.  The root logger
# will never be used by Ml code once this config file has been read, so any
# logging to the console will generally indicate something is not working
# correctly.
log4j.rootLogger=INFO, A1

# Also set up a logger named after the log identifier of the program, with
# appender A2.  Ml programs should send all their messages to this logger
# once this config file has been read.  If there is more than one appender, the
# logger itself must have its level set to the lowest level to be output by any
# of them, and then the individual appenders have separate thresholds to apply
# on top of this to restrict what they output.
log4j.logger.%N=DEBUG, A2
log4j.additivity.%N=false

# A1 is set to be a ConsoleAppender.
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.Target=System.err

# A1 uses PatternLayout.  %P is a Ml extension that is substituted with the
# the process ID.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d %d{%Z} [%P] %-5p %F@%L %m%n

# A2 is set to log to a rolling file in a sub-directory of the Ml logs
# directory.  %D and %N are Ml extensions to standard log4cxx.  %D is
# replaced with the path to the Elasticsearch logs directory and %N with the
# name of the program.
log4j.appender.A2=org.apache.log4j.RollingFileAppender
log4j.appender.A2.File=%D/%N.log
log4j.appender.A2.MaxFileSize=1MB
log4j.appender.A2.MaxBackupIndex=9

# A2 uses PatternLayout (exactly like A1).
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d %d{%Z} [%P] %-5p %F@%L %m%n

