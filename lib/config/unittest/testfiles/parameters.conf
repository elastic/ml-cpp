# This file configures various parameters to Ml's autoconfiguration.
# Reasonable default values are used for all parameters which are not
# explicitly set in this file.

[scope]
# A list of the fields of interest which are the only field names that are
# considered by autoconfiguration if they are set. Note the role specific
# overrides permitted_*_fields take precedence if they are set when enumerating
# possible detectors. These should match exactly the name of one of the fields
# present in the data and be space separated.
fields_of_interest = performance_metric performance_metric_name machine user region program

# A list of candidate field names for use as a by field for the configured
# detectors. These should match exactly the name of one of the fields present
# in the data and be space separated.
permitted_by_fields = performance_metric_name program

# A list of candidate field names for use as an over field for the configured
# detectors. These should match exactly the name of one of the fields present
# in the data and be space separated.
permitted_over_fields = user

# A list of candidate field names for use as a partition field for the configured
# detectors. These should match exactly the name of one of the fields present in
# the data and be space separated.
permitted_partition_fields = user machine region

# A list of the candidate functions for the configured detectors. These should
# be one of "count", "rare", "distinct_count", "info_content", "mean", "min",
# "max", "sum", "varp" or "median" and be space separated.
functions_of_interest = count min max median

[statistics]
# An enumeration of (field name, data type) pairs. These should be alternating
# "field name" "data type" and be space separated. The field name should match
# exactly the name of one of the fields present in the data and the data type
# should be either "categorical" or "numeric".
field_data_types = performance_metric numeric machine categorical

# The minimum number of examples used to deduce the data type of the fields.
minimum_examples_to_classify = 50

# The number of most frequent categories for which to estimate total count. 
number_of_most_frequent_to_count = 20

[configuration]
# The minimum number of examples needed to attempt to configure detectors.
minimum_records_to_attempt_config = 200

# A number of distinct field values such that we prefer not use the field as
# a by if the number exceeds this.
high_number_of_by_fields = 50

# The maximum number of distinct field values for which we'll use the field
# as a by.
maximum_number_of_by_fields = 5000

# A number of distinct field values such that we prefer not use the field as
# a by for rare commands if the number exceeds this.
high_number_of_rare_by_fields = 10000

# The maximum number of distinct field values for which we'll use the field
# as a by for rare commands.
maximum_number_of_rare_by_fields = 100000

# A number of distinct field values such that we prefer not use the field as
# a partition if the number exceeds this.
high_number_of_partition_fields = 1000

# The maximum number of distinct field values for which we'll use the field
# as a partition.
maximum_of_number_partition_fields = 100000

# A number of distinct field values such that we prefer not use the field as
# an over if the number is less than this.
low_number_of_over_fields = 80

# The maximum number of distinct field values for which we'll use the field
# as an over.
minimum_number_of_over_fields = 20

# A proportion of the distinct field values such that we prefer not to use
# the field as a by for rare commands if the proportion exceeds this.
high_cardinality_high_distinct_fraction = 0.005

# The maximum proportion of the distinct field values for which we'll use it
# as a by field for rare commands.
high_cardinality_maximum_distinct_fraction = 0.05 

# The multiplier of the minimum count such that counts less than this are
# judged to be in the low frequency tail of by field values.
high_cardinality_in_tail_factor = 1.03

# The positive increment of the minimum count such that counts less than this
# are judged to be in the low frequency tail of by field values.
high_cardinality_in_tail_increment = 2

# The proption of the total count in the low frequency tail which is considered
# high such that larger values are penalized. 
high_cardinality_high_tail_fraction = 0.31

# The largest permitted proportion of count in the low frequency tail.
high_cardinality_maximum_tail_fraction = 0.62

# The proportion of populated buckets for commands which consider empty buckets,
# i.e. count and sum, first and functions which ignore them second that is
# considered low such that smaller values are penalized. 
low_populated_bucket_ratio = 0.35 0.12

# The minimum permitted proportion of populated buckets for commands which 
# consider empty buckets first and functions which ignore them second.
minimum_populated_bucket_ratio = 0.11 0.042

# The permitted detector bucket lengths. These should be greater than zero and
# space separated.
candidate_bucket_lengths = 1 60 600 1800 7200

# A number of buckets such that we prefer not to use the bucket length if the
# total span of the data is less than this time the bucket length.
low_number_buckets_for_config = 30

# A number of buckets such that we will not use the bucket length if the total
# span of the data is less than this time the bucket length.
minimum_number_buckets_for_config = 8

# The minimum proportion of regular data to classify a data set as polled.
polled_data_minimum_mass_at_interval = 0.89

# The maximum amount that polled data times can jitter about the polling interval.
polled_data_jitter = 0.03

# A coefficient of variation for a bucketed statistic which is considered low
# such that lower values are penalized.
low_coefficient_of_variation = 0.003

# The minimum coefficient of variation for a bucketed statistic to be worthwhile
# modeling.
minimum_coefficient_of_variation = 0.0002


