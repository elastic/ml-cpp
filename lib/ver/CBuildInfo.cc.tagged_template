/*
 * ELASTICSEARCH CONFIDENTIAL
 *
 * Copyright (c) 2016 Elasticsearch BV. All Rights Reserved.
 *
 * Notice: this software, and all information contained
 * therein, is the exclusive property of Elasticsearch BV
 * and its licensors, if any, and is protected under applicable
 * domestic and foreign law, and international treaties.
 *
 * Reproduction, republication or distribution without the
 * express written consent of Elasticsearch BV is
 * strictly prohibited.
 */
#include <ver/CBuildInfo.h>

#include <core/CProgName.h>
#include <core/CStringUtils.h>


namespace ml
{
namespace ver
{


// Initialise static strings
// The tokens in the template file are substituted by the Makefile
// @warning.comment@
const std::string CBuildInfo::VERSION_NUMBER("@version.number@");
const std::string CBuildInfo::BUILD_NUMBER("@build.number@");
const std::string CBuildInfo::COPYRIGHT("Copyright (c) @build.year@ Elasticsearch BV");


const std::string &CBuildInfo::versionNumber(void)
{
    return VERSION_NUMBER;
}

const std::string &CBuildInfo::buildNumber(void)
{
    return BUILD_NUMBER;
}

const std::string &CBuildInfo::copyright(void)
{
    return COPYRIGHT;
}

std::string CBuildInfo::fullInfo(void)
{
    static const size_t BITS_PER_BYTE(8);

    return core::CProgName::progName() +
           " (" + core::CStringUtils::typeToString(sizeof(void *) * BITS_PER_BYTE) + " bit):"
           " Version " + VERSION_NUMBER + " (Build " + BUILD_NUMBER + ") " +
           COPYRIGHT;
}


}
}

