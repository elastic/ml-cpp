#
# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. Licensed under the Elastic License
# 2.0 and the following additional limitation. Functionality enabled by the
# files subject to the Elastic License 2.0 may only be used in production when
# invoked by an Elasticsearch process with a license key installed that permits
# use of machine learning features. You may not use this file except in
# compliance with the Elastic License 2.0 and the foregoing additional
# limitation.
#

project("ML Ver")

# Prepare values to substitute into the template
set(PRODUCT_VERSION "${ML_VERSION_NUM}")

message(STATUS "PRODUCT_VERSION ${PRODUCT_VERSION}")
message(STATUS "ML_USER ${ML_USER}")
message(STATUS "BUILD_YEAR ${BUILD_YEAR}")

if(DEFINED ENV{VERSION_QUALIFIER})
  set(PRODUCT_VERSION "${PRODUCT_VERSION}-$ENV{VERSION_QUALIFIER}")
endif()

if("$ENV{SNAPSHOT}" STREQUAL "yes")
  set(PRODUCT_VERSION "${PRODUCT_VERSION}-SNAPSHOT")
endif()

if (CMAKE_SYSTEM_NAME STREQUAL "Windows")
  execute_process(COMMAND git -c core.fileMode=false update-index -q --refresh ERROR_FILE /dev/null OUTPUT_FILE /dev/null  COMMAND git -c core.fileMode=false diff-index --quiet HEAD --  RESULT_VARIABLE UNCOMMITTED_CHANGES)
else()
  execute_process(COMMAND git update-index -q --refresh ERROR_FILE /dev/null OUTPUT_FILE /dev/null COMMAND git diff-index --quiet HEAD --  RESULT_VARIABLE UNCOMMITTED_CHANGES)
endif()

# Decide which build to perform based on whether there are uncommitted changes
if(UNCOMMITTED_CHANGES)
  add_compile_definitions(DEV_BUILD)
endif()

set(TEMPLATE "template")

set(warning.comment "DO NOT EDIT THIS FILE - instead edit the template")
set(build.year "${BUILD_YEAR}")
set(user.name "${ML_USER}")
set(version.number "${PRODUCT_VERSION}")
set(build.number "${ML_BUILD_STR}")
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CBuildInfo.cc.${TEMPLATE}
  ${CMAKE_CURRENT_SOURCE_DIR}/CBuildInfo.cc
  )

set(SRCS
  CBuildInfo.cc
  )

ml_add_library(MlVer STATIC ${SRCS})
