#!/bin/bash
#
# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. Licensed under the Elastic License;
# you may not use this file except in compliance with the Elastic License.
#

# The non-Windows part of ML C++ CI does the following:
#
# 1. If this is a PR build, check the code style
# 2. Build and unit test the Linux version of the C++
# 3. Build the macOS version of the C++
# 4. If this is not a PR build, upload the builds to the artifacts directory on
#    S3 that subsequent Java builds will download the C++ components from
#
# The steps run in Docker containers that ensure OS dependencies
# are appropriate given the support matrix.
#
# The macOS build cannot be unit tested as it is cross-compiled.

set -e

# Change directory to the directory containing this script
cd `dirname $0`

# Default to a snapshot build
if [ -z "$BUILD_SNAPSHOT" ] ; then
    BUILD_SNAPSHOT=true
fi

# Jenkins sets BUILD_SNAPSHOT, but our Docker scripts require SNAPSHOT
if [ "$BUILD_SNAPSHOT" = false ] ; then
    export SNAPSHOT=no
else
    export SNAPSHOT=yes
fi

# Remove any old builds
rm -rf ../builds

# If this is a PR build then fail fast on style checks
if [ -n "$PR_AUTHOR" ] ; then
    ./docker_check_style.sh
fi

# Build and test Linux
./docker_test.sh linux

# Build macOS
./docker_build.sh macosx

# If this isn't a PR build then upload the artifacts
if [ -z "$PR_AUTHOR" ] ; then
    cd ..
    ./gradlew --info -b upload.gradle -Dbuild.snapshot=$BUILD_SNAPSHOT upload
fi

