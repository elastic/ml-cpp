## üè†/.buildkite/pipeline.yml
# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. Licensed under the Elastic License
# 2.0 and the following additional limitation. Functionality enabled by the
# files subject to the Elastic License 2.0 may only be used in production when
# invoked by an Elasticsearch process with a license key installed that permits
# use of machine learning features. You may not use this file except in
# compliance with the Elastic License 2.0 and the foregoing additional
# limitation.
env:
  BUILDKITE_REPO: "https://github.com/elastic/ml-cpp.git"
  BUILD_OS: "linux"
  BUILD_ARCH: "x86_64"
  BUILD_TYPE: "RelWithDebInfo"
  BUILD_SNAPSHOT: "yes"
  CMAKE_FLAGS: "-DCMAKE_TOOLCHAIN_FILE=cmake/linux-x86_64.cmake"
  PR_AUTHOR: "${BUILDKITE_PULL_REQUEST}"
  BOOST_TEST_OUTPUT_FORMAT_FLAGS: "--logger=JUNIT,error,boost_test_results.junit"
steps:
  - label: "Validate formatting with clang-format"
    key: "check_style"
    command: ".buildkite/scripts/steps/check-style.sh --all"
    agents:
      image: "docker.elastic.co/ml-dev/ml-check-style:2"
  - label: "Build :cpp: for linux-x86_64-RelWithDebInfo"
    timeout_in_minutes: 180
    agents:
      machineType: "c2-highcpu-32"
      memory: "64G"
      image: "docker.elastic.co/ml-dev/ml-linux-build:24"
    commands:
      - "echo nproc = $(nproc)"
      - ".buildkite/scripts/steps/build_and_test.sh"
      - "buildkite-agent artifact upload 'build/**/*'"
    depends_on: "check_style"
    key: "build_linux-x86_64-RelWithDebInfo"
    env:
      RUN_TESTS: "false"
  - label: "Test :cpp: for linux-x86_64-RelWithDebInfo"
    timeout_in_minutes: 180
    agents:
      machineType: "c2-standard-32"
      memory: "64G"
      image: "docker.elastic.co/ml-dev/ml-linux-build:24"
    commands:
      - "echo nproc = $(nproc)"
      - "buildkite-agent artifact download 'build/*'"
      - ".buildkite/scripts/steps/build_and_test.sh"
    plugins:
      - test-collector#v1.2.0:
          files: "lib/*/unittest/boost_test_results.junit"
          format: "junit"
    depends_on: "build_linux-x86_64-RelWithDebInfo"
    key: "test_linux-x86_64-RelWithDebInfo"
    env:
      RUN_TESTS: "true"
      BOOST_TEST_OUTPUT_FORMAT_FLAGS: "--logger=JUNIT,error,boost_test_results.junit"
