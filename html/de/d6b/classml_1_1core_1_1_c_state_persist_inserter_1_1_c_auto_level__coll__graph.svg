<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 10.0.1 (20240210.2158)
 -->
<!-- Title: ml::core::CStatePersistInserter::CAutoLevel Pages: 1 -->
<svg width="248pt" height="161pt"
 viewBox="0.00 0.00 247.75 161.25" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="../../svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 157.25)">
<title>ml::core::CStatePersistInserter::CAutoLevel</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="Class to implement RAII for moving to the next level.">
<polygon fill="#999999" stroke="#666666" points="151.75,-30.5 0,-30.5 0,0 151.75,0 151.75,-30.5"/>
<text text-anchor="start" x="8" y="-17" font-family="Helvetica,sans-Serif" font-size="10.00">ml::core::CStatePersistInserter</text>
<text text-anchor="middle" x="75.88" y="-5.75" font-family="Helvetica,sans-Serif" font-size="10.00">::CAutoLevel</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="Node000002" class="node">
<title>Node2</title>
<g id="a_Node000002"><a xlink:href="../../d0/d45/classml_1_1core_1_1_c_non_copyable.html" target="_top" xlink:title="Equivalent to boost::noncopyable.">
<polygon fill="white" stroke="#666666" points="133.88,-153.25 9.88,-153.25 9.88,-134 133.88,-134 133.88,-153.25"/>
<text text-anchor="middle" x="71.88" y="-139.75" font-family="Helvetica,sans-Serif" font-size="10.00">ml::core::CNonCopyable</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1_Node000001_Node000002" class="edge">
<title>Node2&#45;&gt;Node1</title>
<g id="a_edge1_Node000001_Node000002"><a xlink:title=" ">
<path fill="none" stroke="#8b1a1a" d="M72.52,-122.28C73.33,-96.71 74.7,-53.46 75.41,-30.91"/>
<polygon fill="#8b1a1a" stroke="#8b1a1a" points="69.03,-121.92 72.21,-132.02 76.03,-122.14 69.03,-121.92"/>
</a>
</g>
</g>
<!-- Node3 -->
<g id="Node000003" class="node">
<title>Node3</title>
<g id="a_Node000003"><a xlink:href="../../d6/d96/classml_1_1core_1_1_c_state_persist_inserter.html" target="_top" xlink:title="Abstract interface for persisting state.">
<polygon fill="white" stroke="#666666" points="239.75,-97 88,-97 88,-77.75 239.75,-77.75 239.75,-97"/>
<text text-anchor="middle" x="163.88" y="-83.5" font-family="Helvetica,sans-Serif" font-size="10.00">ml::core::CStatePersistInserter</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node3 -->
<g id="edge3_Node000003_Node000002" class="edge">
<title>Node2&#45;&gt;Node3</title>
<g id="a_edge3_Node000003_Node000002"><a xlink:title=" ">
<path fill="none" stroke="#8b1a1a" d="M96.68,-128C113.26,-118.22 134.54,-105.68 148.66,-97.35"/>
<polygon fill="#8b1a1a" stroke="#8b1a1a" points="95.21,-124.8 88.37,-132.9 98.76,-130.83 95.21,-124.8"/>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2_Node000001_Node000003" class="edge">
<title>Node3&#45;&gt;Node1</title>
<g id="a_edge2_Node000001_Node000003"><a xlink:title=" ">
<path fill="none" stroke="#9a32cd" stroke-dasharray="5,2" d="M143.81,-70.39C128.92,-58.52 108.76,-42.46 94.28,-30.92"/>
<polygon fill="#9a32cd" stroke="#9a32cd" points="141.54,-73.06 151.55,-76.55 145.91,-67.58 141.54,-73.06"/>
</a>
</g>
<text text-anchor="middle" x="154.62" y="-50.25" font-family="Helvetica,sans-Serif" font-size="10.00" fill="grey"> m_Inserter</text>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
