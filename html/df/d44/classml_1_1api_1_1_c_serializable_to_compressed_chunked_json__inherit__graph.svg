<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 10.0.1 (20240210.2158)
 -->
<!-- Title: ml::api::CSerializableToCompressedChunkedJson Pages: 1 -->
<svg width="476pt" height="147pt"
 viewBox="0.00 0.00 476.00 147.12" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="../../svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 143.12)">
<title>ml::api::CSerializableToCompressedChunkedJson</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="Interface for writing the inference model and training data summarization JSON descriptions to a stre...">
<polygon fill="#999999" stroke="#666666" points="287,-79.5 155.5,-79.5 155.5,-49 287,-49 287,-79.5"/>
<text text-anchor="start" x="163.5" y="-66" font-family="Helvetica,sans-Serif" font-size="10.00">ml::api::CSerializableTo</text>
<text text-anchor="middle" x="221.25" y="-54.75" font-family="Helvetica,sans-Serif" font-size="10.00">CompressedChunkedJson</text>
</a>
</g>
</g>
<!-- Node3 -->
<g id="Node000003" class="node">
<title>Node3</title>
<g id="a_Node000003"><a xlink:href="../../de/d1d/classanonymous__namespace_02_c_serializable_to_json_test_8cc_03_1_1_c_serializable_vector.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="467.25,-139.12 323.75,-139.12 323.75,-97.38 467.25,-97.38 467.25,-139.12"/>
<text text-anchor="start" x="331.75" y="-125.62" font-family="Helvetica,sans-Serif" font-size="10.00">anonymous_namespace</text>
<text text-anchor="start" x="331.75" y="-114.38" font-family="Helvetica,sans-Serif" font-size="10.00">{CSerializableToJsonTest.cc}</text>
<text text-anchor="middle" x="395.5" y="-103.12" font-family="Helvetica,sans-Serif" font-size="10.00">::CSerializableVector</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2_Node000001_Node000003" class="edge">
<title>Node1&#45;&gt;Node3</title>
<g id="a_edge2_Node000001_Node000003"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M282.68,-83.2C296.86,-87.64 312.05,-92.4 326.53,-96.94"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="284.11,-79.97 273.52,-80.32 282.01,-86.65 284.11,-79.97"/>
</a>
</g>
</g>
<!-- Node4 -->
<g id="Node000004" class="node">
<title>Node4</title>
<g id="a_Node000004"><a xlink:href="../../d7/d1e/classml_1_1api_1_1_c_data_summarization_json_writer.html" target="_top" xlink:title="Writes the data summarization as a compressed, base64 encoded and chunked JSON blob.">
<polygon fill="white" stroke="#666666" points="468,-79.5 323,-79.5 323,-49 468,-49 468,-79.5"/>
<text text-anchor="start" x="331" y="-66" font-family="Helvetica,sans-Serif" font-size="10.00">ml::api::CDataSummarization</text>
<text text-anchor="middle" x="395.5" y="-54.75" font-family="Helvetica,sans-Serif" font-size="10.00">JsonWriter</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node4 -->
<g id="edge3_Node000001_Node000004" class="edge">
<title>Node1&#45;&gt;Node4</title>
<g id="a_edge3_Node000001_Node000004"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M298.86,-64.25C306.77,-64.25 314.8,-64.25 322.66,-64.25"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="298.88,-60.75 288.88,-64.25 298.88,-67.75 298.88,-60.75"/>
</a>
</g>
</g>
<!-- Node5 -->
<g id="Node000005" class="node">
<title>Node5</title>
<g id="a_Node000005"><a xlink:href="../../d3/dc0/classml_1_1api_1_1_c_inference_model_definition.html" target="_top" xlink:title="Technical details required for model evaluation.">
<polygon fill="white" stroke="#666666" points="458.25,-30.5 332.75,-30.5 332.75,0 458.25,0 458.25,-30.5"/>
<text text-anchor="start" x="340.75" y="-17" font-family="Helvetica,sans-Serif" font-size="10.00">ml::api::CInferenceModel</text>
<text text-anchor="middle" x="395.5" y="-5.75" font-family="Helvetica,sans-Serif" font-size="10.00">Definition</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node5 -->
<g id="edge4_Node000001_Node000005" class="edge">
<title>Node1&#45;&gt;Node5</title>
<g id="a_edge4_Node000001_Node000005"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M288.11,-45.52C304.96,-40.72 322.9,-35.62 339.16,-30.99"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="287.34,-42.09 278.68,-48.2 289.26,-48.83 287.34,-42.09"/>
</a>
</g>
</g>
<!-- Node2 -->
<g id="Node000002" class="node">
<title>Node2</title>
<g id="a_Node000002"><a xlink:href="../../d6/d00/classml_1_1api_1_1_c_serializable_to_json_stream.html" target="_top" xlink:title="Interface for writing the inference model defition JSON description to a stream.">
<polygon fill="white" stroke="#666666" points="119.5,-79.5 0,-79.5 0,-49 119.5,-49 119.5,-79.5"/>
<text text-anchor="start" x="8" y="-66" font-family="Helvetica,sans-Serif" font-size="10.00">ml::api::CSerializableTo</text>
<text text-anchor="middle" x="59.75" y="-54.75" font-family="Helvetica,sans-Serif" font-size="10.00">JsonStream</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1_Node000001_Node000002" class="edge">
<title>Node2&#45;&gt;Node1</title>
<g id="a_edge1_Node000001_Node000002"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M130.93,-64.25C138.97,-64.25 147.14,-64.25 155.11,-64.25"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="131.2,-60.75 121.2,-64.25 131.2,-67.75 131.2,-60.75"/>
</a>
</g>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
